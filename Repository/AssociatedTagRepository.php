<?php

namespace ICAPLyon1\Bundle\SimpleTagBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * AssociatedTagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AssociatedTagRepository extends EntityRepository
{

    /**
     * getAssociatedTagsByClass
     * 
     * @param array of Ids $tagIds, string $taggableClass
     * @return array of results
     */
    public function getAssociatedTagsByClass($tagIds, $taggableClass)
    {
        $qb = $this->getAssociatedTagsQueryBuilder();
        $qb->andWhere('associatedtag.taggableClass = :taggableClass')
            ->setParameter('taggableClass', $taggableClass)
            ->andWhere($qb->expr()->in('associatedtag.tag_id', $tagIds))
        ;

        return $qb->getQuery()->getResult();
    }

    /**
     * getAssociatedTags
     * 
     * @param array of Ids $tagIds
     * @return array of results
     */
    public function getAssociatedTags($tagIds)
    {
        $qb = $this->getAssociatedTagsQueryBuilder();
        $qb->andWhere($qb->expr()->in('associatedtag.tag_id', $tagIds));

        return $qb->getQuery()->getResult();
    }

    /**
     * getAssociatedTagsQueryBuilder
     *
     * @return QueryBuilder
     */
    public function getAssociatedTagsQueryBuilder()
    {
        return $this
            ->createQueryBuilder('associatedtag')
            ->distinct('associatedtag.hash')
        ;
    }

    /**
     * extractQuery
     *
     * @param array $params
     * @return Query
     */
    public function extractQuery($params)
    {
        $qb = $this->extractQueryBuilder($params);

        return is_null($qb) ? $qb : $qb->getQuery();
    }

    /**
     * extract
     *
     * @param array $params
     * @return DoctrineCollection
     */
    public function extract($params)
    {
        $q = $this->extractQuery($params);
        
        return is_null($q) ? array() : $q->getResult();
    }

}